version: "3.5"

services:
  library-api:
    image: server_mern
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: server-mern
    volumes:
      - /app/node_modules
      - ./server:/app
    # ports:
    #   - 5000:5000
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGO_URI: ${MONGO_URI}
    networks:
      - library-mern-api
  client:
    image: client_mern
    container_name: frontend-mern
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./client:/app
    # ports:
    #   - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - library-api
    networks:
      - library-mern-api
  nginx:
    image: nginx_mern
    container_name: nginx-mern
    restart: always
    depends_on:
      - library-api
      - client
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    ports:
      - 80:80
      - 443:443
    networks:
      - library-mern-api
  certbot:
    image: certbot/certbot
    container_name: certbot-mern
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - library-mern-api
networks:
  library-mern-api:
    driver: bridge
# volumes:
#   mongodb-data:
#     driver: local
